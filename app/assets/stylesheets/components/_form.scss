@import "mixins/animations";
@import "mixins/media";

form {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  @extend .flex-gap--xs !optional;

  input,
  button,
  textarea {
    background-color: var(--color-white);
    transition: box-shadow 300ms, min-height 300ms;
    @extend .p--s !optional;
    @extend .p-t--xs !optional;
    @extend .fs--m !optional;
    @extend .box-shadow--tiny !optional;
  }

  input:hover,
  button:hover,
  textarea:hover {
    @extend .box-shadow--small !optional;
  }

  input:active,
  input:focus,
  textarea:active,
  textarea:focus {
    outline: var(--border-shape);
    outline-color: var(--color-primary);
  }

  input[type=button]:active,
  input[type=submit]:active,
  input[type=checkbox]:active,
  input[type=radio]:active,
  input[type=button]:focus,
  input[type=submit]:focus,
  input[type=checkbox]:focus,
  input[type=radio]:focus {
    outline: none;
  }

  input[type=text],
  textarea {
    @extend .p-l--s !optional;
  }
}

.form {
  &-element {
    @extend .flex-display !optional;
    @extend .flex-column !optional;
    flex-wrap: nowrap;
    @extend .flex-gap--xxs !optional;

    label {
      @extend .fs--m !optional;
      @extend .muted !optional;
    }

    input[type=checkbox] ~ label,
    input[type=radio] ~ label {
      color: var(--color-text-body);
    }

    .field_with_errors label {
      color: var(--color-error);
    }

    input,
    button,
    textarea {
      width: 100%;
      min-width: 100%;
      max-width: 100%;
      border: none;
      outline: none;
      @extend .border--rounded !optional;
    }

    input[type=checkbox],
    input[type=radio] {
      width: unset;
      min-width: unset;
      max-width: unset;
    }

    textarea {
      min-height: 8rem;
      @include media(tabletAndUp) {
        min-height: var(--space-xxxxl);
      }
    }

    .field_with_errors input,
    .field_with_errors textarea {
      outline: var(--border-shape) var(--color-error);
    }
  }

  &-error-messages {
    display: flex;
    flex-direction: column;
    @include animate(fade-in, 500ms);
  }

  &-error-message {
    @extend .fs--xs !optional;
    color: var(--color-error);
  }

  &-row {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
  }

  &-input-group {
    align-items: stretch;
  }

  &-input-group input,
  &-input-group button,
  &-input-group textarea {
    border-radius: 0;
    min-width: unset;
    max-width: unset;
  }

  &-input-group__small {
    @extend .p-l--m !optional;
    @extend .p-r--m !optional;
    min-width: fit-content !important;
    flex-basis: content;
  }

  &-input-group > input:first-child,
  &-input-group > button:first-child,
  &-input-group > text:first-child,
  &-input-group > *:first-child input,
  &-input-group > *:first-child button,
  &-input-group > *:first-child textarea {
    border-top-left-radius: var(--border-radius);
    border-bottom-left-radius: var(--border-radius);
  }

  &-input-group > input:last-child,
  &-input-group > button:last-child,
  &-input-group > textarea:last-child,
  &-input-group > *:last-child input,
  &-input-group > *:last-child button,
  &-input-group > *:last-child textarea {
    border-top-right-radius: var(--border-radius);
    border-bottom-right-radius: var(--border-radius);
  }
}
